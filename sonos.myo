--general script details
scriptId = 'dedril.myo.sonos'
scriptTitle = 'Sonos Connector'

--vars
currentlyControllingVolume = false
originalOrientation = 0 --allows us to know which was the user is rotating their arm

--helper functions
function playPause()
    if platform == "MacOS" then
        myo.keyboard("p",  "press", "command")
    elseif platform == "Windows" then
        myo.keyboard("p",  "press", "control")
    end    
end

function increaseVolume()
    if platform == "MacOS" then
        --todo mac.
    elseif platform == "Windows" then
    	--equal, and shift, is '+'
        myo.keyboard("equal",  "press", "control","shift")
    end   
end


function decreaseVolume()
    if platform == "MacOS" then
        --todo mac.
    elseif platform == "Windows" then
        myo.keyboard("minus",  "press", "control")
    end   
end


function shuttleJumpForward()
    -- Skip to the next track
    if platform == "MacOS" then
        myo.keyboard("right_arrow", "press", "command")
    elseif platform == "Windows" then
        myo.keyboard("right_arrow", "press", "control")
    end
end

function shuttleJumpBackward()
    -- Skip to the previous track
    if platform == "MacOS" then
        myo.keyboard("left_arrow", "press", "command")
    elseif platform == "Windows" then
        myo.keyboard("left_arrow", "press", "control")
    end
end

function onForegroundWindowChange(app, title)
    
    return platform == "MacOS" and app == "com.sonos.macController" or
           platform == "Windows" and app == "Sonos.exe"
end

function activeAppName()
    return scriptTitle
end

--event handlers
function onPeriodic()

    if currentlyControllingVolume then
      
  	    --first work out which way the user is rotating.
  	    local currentOrientation = math.deg(myo.getRoll())
  	    myo.debug("current:" .. currentOrientation)
  	    myo.debug("original:" .. originalOrientation)
  	    
  	    local diff = math.abs(currentOrientation - originalOrientation)
  	    
  	    --so we only do anything if the angle is big enough
  	    if diff > 11 then
  
		    if currentOrientation > originalOrientation then
			increaseVolume()
			myo.debug("increasing")
		    else
			decreaseVolume()
			myo.debug("decreasing")
		    end 
	    end
  
   end  
    
end
function onPoseEdge(pose, edge)
    local now = myo.getTimeMilliseconds()

    if edge == "on"  then

        -- Play/pause
        if pose == "fingersSpread" then
            playPause()
        end
        
        -- Volume
        if pose == "fist" then
            currentlyControllingVolume = true
            originalOrientation = math.deg(myo.getRoll())
            
            --now wait for the rotation commands
            myo.unlock("hold") --todo trev, this is gonna be a problem..
            myo.debug("fist on")
        end
        
        -- Shuttle controls
        if pose == "waveIn" or pose == "waveOut" then

            -- Swap Wave In/Out if Myo is on the left arm.
            if myo.getArm() == "left" then
                if pose == "waveIn" then
                    pose = "waveOut"
                else
                    pose = "waveIn"
                end
            end

            if pose == "waveIn" then
                shuttleJumpBackward()
            else
                shuttleJumpForward()
            end

        end
    else --exiting a pose	
    
        -- Volume
        if pose == "fist" then
            currentlyControllingVolume = false	
            myo.debug("fist off")
            myo.lock()
        end

    end
end
